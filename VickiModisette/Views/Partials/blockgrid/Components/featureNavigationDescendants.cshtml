@using Umbraco.Extensions
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@*@using Umbraco.Cms.Core.Models.PublishedContent*@
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;


@*@{
    // no need to use a layout for this partial
    // the feature header is contained within the feature itself
    Layout = "_Layout.cshtml";
}*@

@{
    IPublishedContent vThisPage = UmbracoContext!.PublishedRequest!.PublishedContent!;
    int intCurLevel = vThisPage.Level;
    IPublishedContent ThisSectionPage = vThisPage.Ancestor(2)!;
    if (vThisPage.Level == 2) { ThisSectionPage = vThisPage; }
}

@{
    void renderLI(IPublishedContent NavItem)
    {
        <li data-level="level-@NavItem.Level" class=" @(NavItem.IsAncestorOrSelf(vThisPage) ? " active" : "")@(NavItem.IsDescendant(vThisPage) ? "descendant" : "")">
            <a href="@NavItem.Url()" class="list-group-item-action list-group-item list-group-item-light ps-@NavItem.Level @(NavItem.IsAncestorOrSelf(vThisPage) ? " active" : "")@(NavItem.IsDescendant(vThisPage) ? "descendant" : "")">@NavItem.Value("pageTitleShort")</a>
            @if (NavItem.IsAncestorOrSelf(vThisPage) && NavItem.Children != null)
            {
                <ul class="list-group nav">
                    @foreach (IPublishedContent ListItemChild in NavItem.Children)
                    {
                        renderLI(ListItemChild);
                    }
                </ul>
            }
        </li>
    }
}

<nav class="card d-none d-md-block ">
    <header class="card-header">
        <h2 class="card-title">
            <a href="@ThisSectionPage.Url()" class="list-group-item-action list-group-item">@ThisSectionPage.Value("pageTitleShort")</a>
        </h2>
    </header>
    <div class="">
        <ul class="list-group nav">
            @foreach (var NavItem in ThisSectionPage.Children!)
            {
                renderLI(NavItem);
            }
        </ul>
    </div>
</nav>

<nav aria-label="breadcrumb" class="d-sm-block d-md-none">
    @{
        // get ancestors ordered by level ascending
        var ancestors = vThisPage.Ancestors().OrderBy(a => a.Level);

    }
    @if (ancestors.Any())
    {
        <ol class="breadcrumb">
            @foreach (var ancestor in ancestors)
            {
                <li class="breadcrumb-item"><a href="@ancestor.Url()">@ancestor.Value("pageTitleShort")</a></li>
            }
            <li class="breadcrumb-item active"><a href="@vThisPage.Url()">@vThisPage.Value("pageTitleShort")</a></li>
        </ol>
    }
</nav>














